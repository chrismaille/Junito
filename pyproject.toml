[tool.coverage.report]
fail_under = 80

[tool.black]
target-version = ['py311']
include = '\.pyi?$'
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | \venv
    | \.aws-sam
    | _build
    | buck-out
    | build
    | dist
    | node_modules
  )/
)
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.poetry]
name = "junito"
version = "1.3.0"
description = "Parse and logs JUnit report files in Github Action"
authors = ["Chris Maillefaud <chrismaillefaud@gmail.com>"]

[tool.semantic_release]
version_variable = ["junito/__init__.py:__version__", "pyproject.toml:version"]
branch = "main"
upload_to_pypi = false
upload_to_release = true
build_command = "python -m pip install -U poetry && poetry build"
major_on_zero = true

[tool.poetry.scripts]
junito = 'junito.main:check'

[tool.poetry.dependencies]
python = "^3.8"
junitparser = "*"
click = "*"
asbool = "*"

[tool.poetry.dev-dependencies]
bandit = "*"
isort = "*"
black = "*"
pytest = "*"
pytest-coverage = "*"
flake8 = "*"
pre-commit = "*"
pytest-mock = "*"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
